- content_for :title, @petition.title
- petitionside = spin! "petition side", :signature, ["petitionleft", "petitionright"]
- thermposition = spin! "thermometer and social icon placement", :signature, ["therm1", "therm2"]
- signpetitionboxcolor = spin! "change containing box color for sign petition", :signature, ["signaturecolor1", "signaturecolor2", "signaturecolor3", "signaturecolor4", "signaturecolor5", "signaturecolor6"]
- thermometercolor = spin! "change thermometer color", :signature, ["redthermometer", "bluethermomete", "greenthermometer", "orangethermometer", "tealthermometer"]
- signaturelabels = spin! "change positioning and visibility of labels on sign petition form", :signature, ["signature_labels_beside_inputs_no_asterisk", "signature_labels_beside_inputs_with_asterisk", "signature_labels_beside_inputs_with_asterisk_underlined", "signature_labels_above_inputs_no_asterisk", "signature_labels_above_inputs_with_asterisk", "signature_labels_above_inputs_with_asterisk_underlined", "signature_labels_hidden"]
- progressmessaging = spin! "test different messaging on progress bar", :signature, ["x_signatures_of_y", "x_y_to_next_goal", "x_y_to_goal", "x_y_to_go_of_z", "x_supporters_y_to_next_goal", "x_supporters_y_to_goal", "x_supporters_help_us", "x_of_y_supporters"]
- petitionwidth = spin! "testing different widths", :signature, ["fullwidthpetition", "middlewidthpetition", "narrowwidthpetition"]
- showfullname = spin! "full name vs first and last name", :signature, ["fullname", "firstandlastname"]
- if @was_signed
  - fb_action_like_popup = spin! "facebook sharing options", :referred_member, ["facebook_like", "facebook_popup"]
  - thankyouarrowcolor = spin! "different arrow colors in thank you box", :share, ["bluearrow", "redarrow", "limearrow", "lightbluearrow", "orangearrow"]
  - thankyouboxcolor = spin! "different background for thank you box", :share, ["hex_f5f5f5", "hex_bbb", "hex_999", "hex_666", "hex_333", "hex_000"]
-#add "facebook_share" option to this experiment

= render :partial => "javascript_content", :locals => {fb_action_like_popup: fb_action_like_popup}

.fb-root

#petition_page.page_content{class: [petitionside, thermposition, signpetitionboxcolor, signaturelabels, thermometercolor, petitionwidth, thankyouboxcolor, thankyouarrowcolor]}
  .sidebar_test.secondary
    - unless @was_signed
      .signature-form
        .title
          Sign this petition!
        .through_site
          = form_tag [@petition, @signature] do |form|
            = simple_fields_for :signature, @signature do |f|
              - if signaturelabels == 'signature_labels_hidden'
                - placeholder_name = { placeholder: 'name' }
                - placeholder_first_name = { placeholder: 'first name' }
                - placeholder_last_name = { placeholder: 'last name' }
              - else
                - placeholder_name = {}
                - placeholder_first_name = {}
                - placeholder_last_name = {}

              - if showfullname == "fullname"
                = f.input :name, :hint => false, :input_html => placeholder_name
              - else
                = f.input :first_name, :hint => false, :input_html => placeholder_first_name
                = f.input :last_name, :hint => false, :input_html => placeholder_last_name

              - if signaturelabels == 'signature_labels_hidden'
                - placeholder_email = { placeholder: 'email' }
              - else
                - placeholder_email = {}
              = f.input :email, :input_html => placeholder_email
              = render :partial => "hidden_params"
              #hint.alert.alert-error
              = f.button(:submit, { :id => 'sign_petition', :class => 'btn btn-primary', :value => spin!("sign button", :signature, ['Sign!', 'Sign Now!', 'Sign Up!'])})
          .through_fb
            .text Sign in via
            .button.btn.btn-primary Facebook!
          .privacypolicy
            We don't share your email address without your permission. We will send you updates on this and other important campaigns by email, but you can unsubscribe at any time.
    - else
      #thanks-for-signing-message
        = render :partial => "thanks_for_signing", :locals => {fb_action_like_popup: fb_action_like_popup}
      #sign-again
        %a{href: "javascript:$.cookie('member_id', null, {path: '/'});location.reload();", :id => "sign-again-link"}
          Does someone else want to sign? Click here. 

  .petition_test.primary.petition
    - if @petition.has_edit_permissions(current_user)
      %h1.petition_title.admin= @petition.title
      = link_to_if current_user, 'Edit this Petition', edit_petition_path(@petition), class: "edit btn btn-primary"
    - else
      %h1.petition_title= @petition.title

    .mobile_signup_button
      = link_to('Sign this Petition!', '#sign_mobile', :class => 'mobile_sign btn btn-primary', :'data-toggle' => 'modal', :style => ( @was_signed ? 'display:none' : ''))

    - if progressmessaging == 'x_signatures_of_y' || progressmessaging == 'x_of_y_supporters'
      .social_icons
        = fb_like petition_url(params[:id]), @current_member_hash, nil, true
    - else
      .social_icons.tallerprogress
        -#<a href="http://pinterest.com/pin/create/button/" class="pin-it-button" count-layout="horizontal"><img border="0" src="//assets.pinterest.com/images/PinExt.png" title="Pin It" /></a>
        = fb_like petition_url(params[:id]), @current_member_hash, nil, true
    .progress_bar
      .numbers
        - if progressmessaging == 'x_signatures_of_y'
          .highlight_text
            #{@sigcount} signatures
          of #{counter_size(@sigcount)}
        - elsif progressmessaging == 'x_y_to_next_goal'
          .highlight_text.break
            #{@sigcount} signatures
          only #{counter_size(@sigcount)-@sigcount} more to reach our next goal!
        - elsif progressmessaging == 'x_y_to_goal'
          .highlight_text.break
            #{@sigcount} signatures
          only #{counter_size(@sigcount)-@sigcount} more to reach our goal!
        - elsif progressmessaging == 'x_y_to_go_of_z'
          .highlight_text.break
            #{@sigcount} signatures
          only #{counter_size(@sigcount)-@sigcount} more to reach our goal of #{counter_size(@sigcount)}!
        - elsif progressmessaging == 'x_supporters_y_to_next_goal'
          .highlight_text.break
            #{@sigcount} supporters have signed
          only #{counter_size(@sigcount)-@sigcount} more to reach our next goal!

        - elsif progressmessaging == 'x_supporters_y_to_goal'
          .highlight_text.break
            #{@sigcount} supporters have signed
          only #{counter_size(@sigcount)-@sigcount} more to reach our goal!
        - elsif progressmessaging == 'x_supporters_help_us'
          .highlight_text.break
            #{@sigcount} supporters have signed
          sign now to help us reach our goal of #{counter_size(@sigcount)}!
        - elsif progressmessaging == 'x_of_y_supporters'
          #{@sigcount} of #{counter_size(@sigcount)} supporters have signed
      .progress
        .bar{ style: "width: #{float_to_percentage(@sigcount.to_f/counter_size(@sigcount))}" }
    %hr
    - petitiontext = @petition.description
    - if @petition.to_send != true
      - petitiontext = Sanitize.clean(petitiontext, Sanitize::Config::BASIC)
    .description= petitiontext.html_safe


  - content_for(:meta_tags) do
    - petition_to_open_graph(@petition, find_member_by_id_hash(@referring_member_hash)).each do |key, value|
      = content_tag "meta", nil, property:key, content:value

  = hidden_field_tag 'petitionId', @petition.id

  - if @just_signed
    .modal#thanksModal
      .modal-body
        = link_to('x' , '#', :class => "close", :"data-dismiss" => 'modal')
        = render :partial => "thanks_for_signing", :locals => {fb_action_like_popup: fb_action_like_popup}

  .modal.hide#sign_mobile.signature-form
    .modal-body
      = link_to('x' , '', :class => 'close', :'data-dismiss' => 'modal')
      .title
        Sign this petition!
      .through_site
        = form_tag [@petition, @signature] do |form|
          = simple_fields_for :signature, @signature do |f|
            - if signaturelabels == 'signature_labels_hidden'
              - placeholder_name = { placeholder: 'name' }
              - placeholder_first_name = { placeholder: 'first name' }
              - placeholder_last_name = { placeholder: 'last name' }
            - else
              - placeholder_name = {}
              - placeholder_first_name = {}
              - placeholder_last_name = {}

            - if showfullname == "fullname"
              = f.input :name, :hint => false, :input_html => placeholder_name
            - else
              = f.input :first_name, :hint => false, :input_html => placeholder_first_name
              = f.input :last_name, :hint => false, :input_html => placeholder_last_name

            - if signaturelabels == 'signature_labels_hidden'
              - placeholder_email = { placeholder: 'email' }
            - else
              - placeholder_email = {}
            = f.input :email, :input_html => placeholder_email
            #hint.alert.alert-error
            = render :partial => "hidden_params"
            = f.button(:submit, { :id => 'sign_petition', :class => 'btn btn-primary', :value => spin!("sign button", :signature, ['Sign!', 'Sign Now!', 'Sign Up!'])})
